
var app = new PIXI.Application( {
    width: window.innerWidth,
    height: window.innerHeight,
    resolution: 1,
    antialias: false,
    forceFXAA: false,
    forceCanvas: false,
    autoResize: true,
    transparent: false,
    backgroundColor: 0x2c3e50,
    clearBeforeRender: true,
    preserveDrawingBuffer: false,
    roundPixels: false,
    resolution: devicePixelRatio 
});
document.body.appendChild(app.view);

app.loader.add('chars', '8x8t.png')
    .load(startup);

window.addEventListener('resize', resize);

// Resize function window
function resize() {
	// Resize the renderer
    app.renderer.resize(window.innerWidth, window.innerHeight);
    app.stage.children.forEach((c)=>{
	if (c.type && c.type == 'rect') {
	    c.position = {x: Math.random() * app.renderer.width, y:  Math.random() * app.renderer.height};
	}
    });
}
resize();


function startup() {
    //toggleFullscreen();
    let rects = [];
    const RECT_COUNT = 100;
    //PIXI.SCALE_MODES.DEFAULT = PIXI.SCALE_MODES.NEAREST;
    //PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;

    let tex = app.loader.resources.chars.texture;
    tex.baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST; 
    var chars = new PIXI.Sprite(tex);
    chars.position = {x:200, y:200}
    chars.scale = {x:2.5,y:2.5}
    app.stage.addChild(chars);
    chars.interactive = true;
    
    chars.on('mouseover', (e)=>{
	let pos = (chars.toLocal(e.data.global));
	let x = Math.floor(pos.x / 8);
	let y = Math.floor(pos.y / 8);
	let r = new PIXI.Graphics();
	r.beginFill(0xff00ff);
	r.drawRect(x*8, y*8, 8, 8)
	chars.addChild(r);
    });
    
    console.log(chars);
    
    for (let i=0; i<RECT_COUNT; i++) {
	let rect = new PIXI.Graphics();
	let size = Math.random() * 15 + 10;
	rect.type = 'rect';
	
	rect.beginFill(Math.random() * 0xffffff);
	rect.drawRect(-size/2,-size/2,size,size);
	rect.endFill();
	rect.x = Math.random() * app.renderer.width;
	rect.y = Math.random() * app.renderer.height;
	rect.rotation = Math.random() * Math.PI*2;

	var poly = new PIXI.Graphics();
	poly.beginFill(Math.random() * 0xffffff, 0.5);
	poly.drawPolygon([0, 0,
			  size, 0,
			  size, size,
			  0, size])
	poly.endFill();
	
	rect.addChild(poly);

	
	rects.push(rect);
	app.stage.addChild(rect);
    }
    app.ticker.add((delta) => {
	rects.forEach((r)=> {
	    r.rotation += delta * 0.1;
	})

    });


    
}
